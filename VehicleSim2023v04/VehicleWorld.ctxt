#BlueJ class context
comment0.target=VehicleWorld
comment0.text=\n\ \n\ Description\n\ Works\ cited\ and\ known\ bugs\n\ <h1>The\ new\ and\ vastly\ improved\ 2022\ Vehicle\ Simulation\ Assignment.</h1>\n\ <p>\ This\ is\ the\ first\ redo\ of\ the\ 8\ year\ old\ project.\ Lanes\ are\ now\ drawn\ dynamically,\ allowing\ for\n\ \ \ \ \ much\ greater\ customization.\ Pedestrians\ can\ now\ move\ in\ two\ directions.\ The\ graphics\ are\ better\n\ \ \ \ \ and\ the\ interactions\ smoother.</p>\n\ <p>\ The\ Pedestrians\ are\ not\ as\ dumb\ as\ before\ (they\ don't\ want\ straight\ into\ Vehicles)\ and\ the\ Vehicles\n\ \ \ \ \ do\ a\ somewhat\ better\ job\ detecting\ Pedestrians.</p>\n\ \n\ Version\ Notes\ -\ Feb\ 2023\n\ -->\ Includes\ grid\ <-->\ lane\ conversion\ method\n\ -->\ Now\ starts\ with\ 1-way,\ 5\ lane\ setup\ (easier)\n\ \n\ V2023_021\n\ -->\ Improved\ Vehicle\ Repel\ (still\ work\ in\ progress)\n\ -->\ Implemented\ Z-sort,\ disabled\ paint\ order\ between\ Pedestrians\ and\ Vehicles\ (looks\ much\ better\ now)\n\ -->\ Implemented\ lane-based\ speed\ modifiers\ for\ max\ speed\n\ \n\ V2023_04\n\ -->\ Repel\ has\ been\ re-imagined\ and\ now\ takes\ the\ sizes\ of\ Actors\ into\ consideration\ better,\ and\ also\ only\n\ \ \ \ \ moves\ Actors\ verically.\ (The\ code\ to\ move\ in\ both\ dimensions\ is\ there\ and\ works\ but\ it's\ commented\ out\n\ \ \ \ \ because\ this\ is\ the\ effect\ I\ was\ going\ for).\n\ -->\ TODO\ --\ Improve\ flow\ to\ avoid\ Removed\ From\ World\ errors\ when\ a\ Vehicle\ calls\ super.act()\ and\ is\ removed\ there.\n\ \n
comment1.params=
comment1.target=VehicleWorld()
comment1.text=\n\ Constructor\ for\ objects\ of\ class\ MyWorld.\n\ \n\ Note\ that\ the\ Constrcutor\ for\ the\ default\ world\ is\ always\ called\n\ when\ you\ click\ the\ reset\ button\ in\ the\ Greenfoot\ scenario\ screen\ -\n\ this\ is\ is\ basically\ the\ code\ that\ runs\ when\ the\ program\ start.\n\ Anything\ that\ should\ be\ done\ FIRST\ should\ go\ here.\n\ \n
comment10.params=world\ target\ spawners\ startY\ heightPerLane\ lanes\ spacing\ twoWay\ centreSplit\ centreSpacing
comment10.target=int[]\ prepareLanes(greenfoot.World,\ greenfoot.GreenfootImage,\ VehicleSpawner[],\ int,\ int,\ int,\ int,\ boolean,\ boolean,\ int)
comment11.params=actorsToSort\ world
comment11.target=void\ zSort(java.util.ArrayList,\ greenfoot.World)
comment11.text=\n\ Z-sort\ so\ actors\ with\ higher\ Y\ (lower\ on\ screen)\ render\ in\ front.\n\ Uses\ precise\ Y\ for\ SuperSmoothMover\ when\ available.\ Stable\ for\ ties.\n
comment12.params=v
comment12.target=int\ roundAwayFromZero(double)
comment12.text=Helper\:\ symmetric\ rounding\ that\ rounds\ halves\ away\ from\ zero.
comment13.params=world\ target\ spawners\ startY\ heightPerLane\ lanes\ spacing\ twoWay\ centreSplit
comment13.target=int[]\ prepareLanes(greenfoot.World,\ greenfoot.GreenfootImage,\ VehicleSpawner[],\ int,\ int,\ int,\ int,\ boolean,\ boolean)
comment13.text=\n\ <p>The\ prepareLanes\ method\ is\ a\ static\ (standalone)\ method\ that\ takes\ a\ list\ of\ parameters\ about\ the\ desired\ roadway\ and\ then\ builds\ it.</p>\n\ \n\ <p><b>Note\:</b>\ So\ far,\ Centre-split\ is\ the\ only\ option,\ regardless\ of\ what\ values\ you\ send\ for\ that\ parameters.</p>\n\n\ <p>This\ method\ does\ three\ things\:</p>\n\ <ul>\n\ \ <li>\ Determines\ the\ Y\ coordinate\ for\ each\ lane\ (each\ lane\ is\ centered\ vertically\ around\ the\ position)</li>\n\ \ <li>\ Draws\ lanes\ onto\ the\ GreenfootImage\ target\ that\ is\ passed\ in\ at\ the\ specified\ /\ calculated\ positions.\ \n\ \ \ \ \ \ \ (Nothing\ is\ returned,\ it\ just\ manipulates\ the\ object\ which\ affects\ the\ original).</li>\n\ \ <li>\ Places\ the\ VehicleSpawners\ (passed\ in\ via\ the\ array\ parameter\ spawners)\ into\ the\ World\ (also\ passed\ in\ via\ parameters).</li>\n\ </ul>\n\ \n\ <p>\ After\ this\ method\ is\ run,\ there\ is\ a\ visual\ road\ as\ well\ as\ the\ objects\ needed\ to\ spawn\ Vehicles.\ Examine\ the\ table\ below\ for\ an\n\ in-depth\ description\ of\ what\ the\ roadway\ will\ look\ like\ and\ what\ each\ parameter/component\ represents.</p>\n\ \n\ <pre>\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ <\=\=\=\ Start\ Y\n\ \ ||||||||||||||\ \ <\=\=\=\ Top\ Border\n\ \ /------------\\\n\ \ |\ \ \ \ \ \ \ \ \ \ \ \ |\ \ \n\ \ |\ \ \ \ \ \ Y[0]\ \ |\ \ <\=\=\=\ Lane\ Position\ (Y)\ is\ the\ middle\ of\ the\ lane\n\ \ |\ \ \ \ \ \ \ \ \ \ \ \ |\n\ \ \\------------/\n\ \ [\#\#]\ [\#\#]\ [\#\#|\ <\=\=\ spacing\ (\ where\ the\ lane\ lines\ or\ borders\ are\ )\n\ \ /------------\\\n\ \ |\ \ \ \ \ \ \ \ \ \ \ \ |\ \ \n\ \ |\ \ \ \ \ \ Y[1]\ \ |\n\ \ |\ \ \ \ \ \ \ \ \ \ \ \ |\n\ \ \\------------/\n\ \ ||||||||||||||\ \ <\=\=\ Bottom\ Border\n\ </pre>\n\ \n\ @param\ world\ \ \ \ \ The\ World\ that\ the\ VehicleSpawners\ will\ be\ added\ to\n\ @param\ target\ \ \ \ The\ GreenfootImage\ that\ the\ lanes\ will\ be\ drawn\ on,\ usually\ but\ not\ necessarily\ the\ background\ of\ the\ World.\n\ @param\ spawners\ \ An\ array\ of\ VehicleSpawner\ to\ be\ added\ to\ the\ World\n\ @param\ startY\ \ \ \ The\ top\ Y\ position\ where\ lanes\ (drawing)\ should\ start\n\ @param\ heightPerLane\ The\ height\ of\ the\ desired\ lanes\n\ @param\ lanes\ \ \ \ \ The\ total\ number\ of\ lanes\ desired\n\ @param\ spacing\ \ \ The\ distance,\ in\ pixels,\ between\ each\ lane\n\ @param\ twoWay\ \ \ \ Should\ traffic\ flow\ both\ ways?\ Leave\ false\ for\ a\ one-way\ street\ (Not\ Yet\ Implemented)\n\ @param\ centreSplit\ \ \ Should\ the\ whole\ road\ be\ split\ in\ the\ middle?\ Or\ lots\ of\ parallel\ two-way\ streets?\ Must\ also\ be\ two-way\ street\ (twoWay\ \=\=\ true)\ or\ else\ NO\ EFFECT\n\ \n
comment2.params=
comment2.target=void\ act()
comment3.params=
comment3.target=void\ resetWorld()
comment4.params=
comment4.target=void\ resetLanes()
comment5.params=
comment5.target=boolean\ isOnFire()
comment6.params=
comment6.target=void\ spawn()
comment7.params=
comment7.target=void\ spawnSmoker()
comment8.params=lane
comment8.target=int\ getLaneY(int)
comment8.text=\n\ \ Given\ a\ lane\ number\ (zero-indexed),\ return\ the\ y\ position\n\ \ in\ the\ centre\ of\ the\ lane.\ (doesn't\ factor\ offset,\ so\ \n\ \ watch\ your\ offset,\ i.e.\ with\ Bus).\n\ \ \n\ \ @param\ lane\ the\ lane\ number\ (zero-indexed)\n\ \ @return\ int\ the\ y\ position\ of\ the\ lane's\ center,\ or\ -1\ if\ invalid\n
comment9.params=y
comment9.target=int\ getLane(int)
comment9.text=\n\ Given\ a\ y-position,\ return\ the\ lane\ number\ (zero-indexed).\n\ Note\ that\ the\ y-position\ must\ be\ valid,\ and\ you\ should\ \n\ include\ the\ offset\ in\ your\ calculations\ before\ calling\ this\ method.\n\ For\ example,\ if\ a\ Bus\ is\ in\ a\ lane\ at\ y\=100,\ but\ is\ offset\ by\ -20,\n\ it\ is\ actually\ in\ the\ lane\ located\ at\ y\=80,\ so\ you\ should\ send\n\ 80\ to\ this\ method,\ not\ 100.\n\ \n\ @param\ y\ -\ the\ y\ position\ of\ the\ lane\ the\ Vehicle\ is\ in\n\ @return\ int\ the\ lane\ number,\ zero-indexed\n\ \n
numComments=14
